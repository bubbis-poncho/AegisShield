apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: aegisshield
data:
  postgresql.conf: |
    # PostgreSQL 15+ Configuration for AegisShield
    # Constitutional Principle: Data Integrity
    
    # Connection Settings
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    
    # Memory Settings (optimized for data integrity)
    shared_buffers = 256MB
    effective_cache_size = 1GB
    work_mem = 4MB
    maintenance_work_mem = 64MB
    
    # Write-Ahead Logging (WAL) for durability
    wal_level = replica
    wal_buffers = 16MB
    checkpoint_completion_target = 0.9
    
    # Query Planner
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Logging for audit compliance
    log_destination = 'stderr'
    logging_collector = on
    log_statement = 'all'
    log_duration = on
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    
    # Security
    ssl = on
    ssl_cert_file = '/var/lib/postgresql/certs/server.crt'
    ssl_key_file = '/var/lib/postgresql/certs/server.key'
    ssl_ca_file = '/var/lib/postgresql/certs/ca.crt'
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: aegisshield
type: Opaque
stringData:
  POSTGRES_DB: "aegisshield"
  POSTGRES_USER: "aegisshield_user"
  POSTGRES_PASSWORD: "CHANGE_ME_IN_PRODUCTION"  # Use Vault in production
  POSTGRES_REPLICATION_USER: "replicator"
  POSTGRES_REPLICATION_PASSWORD: "CHANGE_ME_IN_PRODUCTION"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: aegisshield
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql
  replicas: 1  # Scale to 3 for HA in production
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        component: database
    spec:
      serviceAccountName: aegisshield-admin
      containers:
      - name: postgresql
        image: postgres:15.4-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        envFrom:
        - secretRef:
            name: postgresql-secret
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgresql-config
        configMap:
          name: postgresql-config
  volumeClaimTemplates:
  - metadata:
      name: postgresql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi  # Scale based on data requirements
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: aegisshield
  labels:
    app: postgresql
    component: database
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgresql
  type: ClusterIP