syntax = "proto3";

package dataintegration;

option go_package = "github.com/aegisshield/data-integration/internal/grpc";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// Data Integration Service
service DataIntegrationService {
  // Health checks
  rpc HealthCheck(google.protobuf.Empty) returns (HealthResponse);
  rpc ReadinessCheck(google.protobuf.Empty) returns (ReadinessResponse);

  // ETL Pipeline operations
  rpc CreateETLJob(CreateETLJobRequest) returns (ETLJobResponse);
  rpc GetETLJob(GetETLJobRequest) returns (ETLJobResponse);
  rpc ListETLJobs(ListETLJobsRequest) returns (ListETLJobsResponse);
  rpc UpdateETLJob(UpdateETLJobRequest) returns (ETLJobResponse);
  rpc DeleteETLJob(DeleteETLJobRequest) returns (google.protobuf.Empty);
  rpc StartETLJob(StartETLJobRequest) returns (ETLJobResponse);
  rpc StopETLJob(StopETLJobRequest) returns (ETLJobResponse);
  rpc GetETLJobStatus(GetETLJobStatusRequest) returns (ETLJobStatusResponse);
  rpc GetETLJobLogs(GetETLJobLogsRequest) returns (ETLJobLogsResponse);
  rpc GetETLJobMetrics(GetETLJobMetricsRequest) returns (ETLJobMetricsResponse);

  // Data Validation operations
  rpc ValidateData(ValidateDataRequest) returns (ValidationResponse);
  rpc CreateValidationRule(CreateValidationRuleRequest) returns (ValidationRuleResponse);
  rpc GetValidationRule(GetValidationRuleRequest) returns (ValidationRuleResponse);
  rpc ListValidationRules(ListValidationRulesRequest) returns (ListValidationRulesResponse);
  rpc UpdateValidationRule(UpdateValidationRuleRequest) returns (ValidationRuleResponse);
  rpc DeleteValidationRule(DeleteValidationRuleRequest) returns (google.protobuf.Empty);
  rpc ProfileData(ProfileDataRequest) returns (DataProfileResponse);

  // Data Quality operations
  rpc CheckDataQuality(CheckDataQualityRequest) returns (DataQualityResponse);
  rpc GetQualityReport(GetQualityReportRequest) returns (QualityReportResponse);
  rpc ListQualityReports(ListQualityReportsRequest) returns (ListQualityReportsResponse);
  rpc GetQualityMetrics(GetQualityMetricsRequest) returns (QualityMetricsResponse);
  rpc ListQualityIssues(ListQualityIssuesRequest) returns (ListQualityIssuesResponse);
  rpc GetQualityIssue(GetQualityIssueRequest) returns (QualityIssueResponse);

  // Data Lineage operations
  rpc TrackLineage(TrackLineageRequest) returns (LineageResponse);
  rpc GetDatasetLineage(GetDatasetLineageRequest) returns (DatasetLineageResponse);
  rpc GetFieldLineage(GetFieldLineageRequest) returns (FieldLineageResponse);
  rpc GetLineageGraph(GetLineageGraphRequest) returns (LineageGraphResponse);
  rpc GetImpactAnalysis(GetImpactAnalysisRequest) returns (ImpactAnalysisResponse);

  // Storage operations
  rpc UploadData(UploadDataRequest) returns (UploadResponse);
  rpc DownloadData(DownloadDataRequest) returns (DownloadResponse);
  rpc ListStorageObjects(ListStorageObjectsRequest) returns (ListStorageObjectsResponse);
  rpc DeleteStorageObject(DeleteStorageObjectRequest) returns (google.protobuf.Empty);
  rpc GetStorageMetadata(GetStorageMetadataRequest) returns (StorageMetadataResponse);
  rpc ArchiveData(ArchiveDataRequest) returns (ArchiveResponse);
  rpc RestoreData(RestoreDataRequest) returns (RestoreResponse);

  // System metrics
  rpc GetSystemMetrics(GetSystemMetricsRequest) returns (SystemMetricsResponse);
}

// Health check messages
message HealthResponse {
  string status = 1;
  google.protobuf.Timestamp timestamp = 2;
  string service = 3;
  string version = 4;
}

message ReadinessResponse {
  bool ready = 1;
  google.protobuf.Timestamp timestamp = 2;
  map<string, bool> checks = 3;
}

// ETL Pipeline messages
message CreateETLJobRequest {
  string name = 1;
  string type = 2; // batch, stream
  map<string, string> source = 3;
  map<string, string> target = 4;
  map<string, string> transform = 5;
  string schedule = 6;
  map<string, string> options = 7;
}

message UpdateETLJobRequest {
  string job_id = 1;
  string name = 2;
  string type = 3;
  map<string, string> source = 4;
  map<string, string> target = 5;
  map<string, string> transform = 6;
  string schedule = 7;
  map<string, string> options = 8;
}

message GetETLJobRequest {
  string job_id = 1;
}

message DeleteETLJobRequest {
  string job_id = 1;
}

message StartETLJobRequest {
  string job_id = 1;
  map<string, string> options = 2;
}

message StopETLJobRequest {
  string job_id = 1;
  bool force = 2;
}

message ListETLJobsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string status = 3;
  string type = 4;
}

message GetETLJobStatusRequest {
  string job_id = 1;
}

message GetETLJobLogsRequest {
  string job_id = 1;
  int32 limit = 2;
  string level = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
}

message GetETLJobMetricsRequest {
  string job_id = 1;
  string time_range = 2;
}

message ETLJobResponse {
  string job_id = 1;
  string name = 2;
  string type = 3;
  string status = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  map<string, string> source = 7;
  map<string, string> target = 8;
  map<string, string> transform = 9;
  string schedule = 10;
}

message ListETLJobsResponse {
  repeated ETLJobResponse jobs = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message ETLJobStatusResponse {
  string job_id = 1;
  string status = 2;
  double progress = 3;
  int64 records_processed = 4;
  int64 records_total = 5;
  google.protobuf.Timestamp started_at = 6;
  google.protobuf.Timestamp estimated_completion = 7;
  string current_phase = 8;
}

message ETLJobLogsResponse {
  string job_id = 1;
  repeated LogEntry logs = 2;
  int32 total = 3;
}

message LogEntry {
  google.protobuf.Timestamp timestamp = 1;
  string level = 2;
  string message = 3;
  map<string, string> details = 4;
}

message ETLJobMetricsResponse {
  string job_id = 1;
  int64 records_processed = 2;
  int64 records_failed = 3;
  int64 records_skipped = 4;
  int64 duration_seconds = 5;
  double throughput_rps = 6;
  double memory_usage_mb = 7;
  double cpu_usage_percent = 8;
  double quality_score = 9;
}

// Data Validation messages
message ValidateDataRequest {
  bytes data = 1;
  repeated string rules = 2;
  map<string, string> config = 3;
}

message ValidationResponse {
  bool valid = 1;
  repeated ValidationError errors = 2;
  repeated ValidationWarning warnings = 3;
  double score = 4;
  google.protobuf.Timestamp validated_at = 5;
  int64 total_records = 6;
  int64 valid_records = 7;
  int64 error_records = 8;
  int64 warning_records = 9;
}

message ValidationError {
  string field = 1;
  string type = 2;
  string message = 3;
  string value = 4;
  int32 row = 5;
}

message ValidationWarning {
  string field = 1;
  string type = 2;
  string message = 3;
  string value = 4;
  int32 row = 5;
}

message CreateValidationRuleRequest {
  string name = 1;
  string type = 2; // pattern, range, required, custom
  string field = 3;
  string pattern = 4;
  string min_value = 5;
  string max_value = 6;
  string description = 7;
  map<string, string> config = 8;
}

message UpdateValidationRuleRequest {
  string rule_id = 1;
  string name = 2;
  string type = 3;
  string field = 4;
  string pattern = 5;
  string min_value = 6;
  string max_value = 7;
  string description = 8;
  map<string, string> config = 9;
}

message GetValidationRuleRequest {
  string rule_id = 1;
}

message DeleteValidationRuleRequest {
  string rule_id = 1;
}

message ListValidationRulesRequest {
  int32 limit = 1;
  int32 offset = 2;
  string type = 3;
}

message ValidationRuleResponse {
  string rule_id = 1;
  string name = 2;
  string type = 3;
  string field = 4;
  string pattern = 5;
  string min_value = 6;
  string max_value = 7;
  string description = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message ListValidationRulesResponse {
  repeated ValidationRuleResponse rules = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message ProfileDataRequest {
  bytes data = 1;
  map<string, string> config = 2;
}

message DataProfileResponse {
  int64 total_records = 1;
  int32 total_fields = 2;
  map<string, int32> data_types = 3;
  double completeness = 4;
  double uniqueness = 5;
  google.protobuf.Timestamp profiled_at = 6;
  repeated FieldProfile field_profiles = 7;
}

message FieldProfile {
  string field_name = 1;
  string data_type = 2;
  double completeness = 3;
  double uniqueness = 4;
  double pattern_match = 5;
  int64 null_count = 6;
  int64 distinct_count = 7;
}

// Data Quality messages
message CheckDataQualityRequest {
  bytes data = 1;
  repeated string dimensions = 2; // completeness, accuracy, consistency, validity, uniqueness, freshness
  map<string, string> config = 3;
}

message DataQualityResponse {
  double overall_score = 1;
  google.protobuf.Timestamp checked_at = 2;
  map<string, QualityDimension> dimensions = 3;
  IssuesSummary issues_summary = 4;
  repeated string recommendations = 5;
}

message QualityDimension {
  double score = 1;
  int32 issues = 2;
  string description = 3;
  map<string, string> details = 4;
}

message IssuesSummary {
  int32 critical = 1;
  int32 major = 2;
  int32 minor = 3;
}

message GetQualityReportRequest {
  string report_id = 1;
}

message ListQualityReportsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string dataset = 3;
  google.protobuf.Timestamp start_date = 4;
  google.protobuf.Timestamp end_date = 5;
}

message QualityReportResponse {
  string report_id = 1;
  string dataset = 2;
  double overall_score = 3;
  int32 issues_count = 4;
  google.protobuf.Timestamp checked_at = 5;
  string status = 6;
  map<string, QualityDimension> dimensions = 7;
  repeated QualityIssue issues = 8;
}

message ListQualityReportsResponse {
  repeated QualityReportResponse reports = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetQualityMetricsRequest {
  string time_range = 1;
  string dataset = 2;
}

message QualityMetricsResponse {
  string time_range = 1;
  string dataset = 2;
  QualityPeriodMetrics current_period = 3;
  QualityPeriodMetrics previous_period = 4;
  map<string, string> trends = 5;
  map<string, double> dimension_scores = 6;
}

message QualityPeriodMetrics {
  double overall_score = 1;
  int32 reports_count = 2;
  int32 issues_detected = 3;
  int32 issues_resolved = 4;
}

message ListQualityIssuesRequest {
  int32 limit = 1;
  int32 offset = 2;
  string severity = 3;
  string status = 4;
  string dataset = 5;
}

message ListQualityIssuesResponse {
  repeated QualityIssue issues = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetQualityIssueRequest {
  string issue_id = 1;
}

message QualityIssueResponse {
  string issue_id = 1;
  string field = 2;
  string type = 3;
  string severity = 4;
  string status = 5;
  int32 count = 6;
  string description = 7;
  google.protobuf.Timestamp detected_at = 8;
  google.protobuf.Timestamp resolved_at = 9;
  string dataset = 10;
  repeated string affected_records = 11;
  repeated string sample_values = 12;
}

message QualityIssue {
  string issue_id = 1;
  string field = 2;
  string type = 3;
  string severity = 4;
  string status = 5;
  int32 count = 6;
  string description = 7;
  google.protobuf.Timestamp detected_at = 8;
}

// Data Lineage messages
message TrackLineageRequest {
  string dataset = 1;
  string operation = 2;
  repeated string source = 3;
  string target = 4;
  map<string, string> metadata = 5;
  map<string, string> schema = 6;
}

message LineageResponse {
  string lineage_id = 1;
  string dataset = 2;
  string operation = 3;
  google.protobuf.Timestamp tracked_at = 4;
}

message GetDatasetLineageRequest {
  string dataset_id = 1;
  string direction = 2; // upstream, downstream, both
  int32 depth = 3;
}

message DatasetLineageResponse {
  string dataset_id = 1;
  string direction = 2;
  int32 depth = 3;
  LineageGraph graph = 4;
  repeated string upstream_datasets = 5;
  repeated string downstream_datasets = 6;
  google.protobuf.Timestamp generated_at = 7;
}

message GetFieldLineageRequest {
  string field_id = 1;
  string dataset_id = 2;
  string field_name = 3;
}

message FieldLineageResponse {
  string field_id = 1;
  string field_name = 2;
  string current_dataset = 3;
  repeated LineageChainEntry lineage_chain = 4;
  repeated SchemaChange schema_evolution = 5;
  google.protobuf.Timestamp generated_at = 6;
}

message LineageChainEntry {
  string dataset = 1;
  string field = 2;
  string operation = 3;
  string transformation = 4;
}

message SchemaChange {
  google.protobuf.Timestamp timestamp = 1;
  string change = 2;
  string details = 3;
}

message GetLineageGraphRequest {
  string filter = 1;
  string layout = 2;
}

message LineageGraphResponse {
  string filter = 1;
  string layout = 2;
  LineageGraph graph = 3;
  map<string, int32> statistics = 4;
  google.protobuf.Timestamp generated_at = 5;
}

message LineageGraph {
  repeated LineageNode nodes = 1;
  repeated LineageEdge edges = 2;
}

message LineageNode {
  string id = 1;
  string type = 2;
  string name = 3;
  string category = 4;
  map<string, string> metadata = 5;
}

message LineageEdge {
  string from = 1;
  string to = 2;
  string operation = 3;
  map<string, string> metadata = 4;
}

message GetImpactAnalysisRequest {
  string dataset_id = 1;
  string change_type = 2;
}

message ImpactAnalysisResponse {
  string dataset_id = 1;
  string change_type = 2;
  string impact_scope = 3;
  repeated AffectedDataset affected_datasets = 4;
  repeated AffectedJob affected_jobs = 5;
  repeated string recommendations = 6;
  google.protobuf.Timestamp generated_at = 7;
}

message AffectedDataset {
  string dataset_id = 1;
  string impact = 2;
  string severity = 3;
  string reason = 4;
}

message AffectedJob {
  string job_id = 1;
  string impact = 2;
  string reason = 3;
}

// Storage messages
message UploadDataRequest {
  string path = 1;
  bytes data = 2;
  map<string, string> metadata = 3;
}

message UploadResponse {
  string upload_id = 1;
  string path = 2;
  int64 size = 3;
  string status = 4;
  google.protobuf.Timestamp uploaded_at = 5;
  string url = 6;
}

message DownloadDataRequest {
  string path = 1;
}

message DownloadResponse {
  string path = 1;
  bytes data = 2;
  string content_type = 3;
  int64 size = 4;
}

message ListStorageObjectsRequest {
  string prefix = 1;
  int32 limit = 2;
  int32 offset = 3;
  string sort_by = 4;
  string order = 5;
}

message ListStorageObjectsResponse {
  repeated StorageObject objects = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message StorageObject {
  string path = 1;
  string name = 2;
  int64 size = 3;
  string content_type = 4;
  google.protobuf.Timestamp modified_at = 5;
  map<string, string> metadata = 6;
}

message DeleteStorageObjectRequest {
  string path = 1;
}

message GetStorageMetadataRequest {
  string path = 1;
}

message StorageMetadataResponse {
  string path = 1;
  string name = 2;
  int64 size = 3;
  string content_type = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp modified_at = 6;
  google.protobuf.Timestamp accessed_at = 7;
  string checksum = 8;
  string storage_class = 9;
  string encryption = 10;
  map<string, string> custom_metadata = 11;
}

message ArchiveDataRequest {
  repeated string paths = 1;
  string archive_type = 2; // cold, glacier, deep_archive
  map<string, string> metadata = 3;
}

message ArchiveResponse {
  string archive_id = 1;
  repeated string paths = 2;
  string archive_type = 3;
  string status = 4;
  google.protobuf.Timestamp initiated_at = 5;
  google.protobuf.Timestamp estimated_completion = 6;
}

message RestoreDataRequest {
  repeated string paths = 1;
  string restore_type = 2; // expedited, standard, bulk
  string target_path = 3;
  map<string, string> metadata = 4;
}

message RestoreResponse {
  string restore_id = 1;
  repeated string paths = 2;
  string restore_type = 3;
  string target_path = 4;
  string status = 5;
  google.protobuf.Timestamp initiated_at = 6;
  google.protobuf.Timestamp estimated_completion = 7;
}

// System metrics messages
message GetSystemMetricsRequest {
  string time_range = 1;
  string component = 2;
}

message SystemMetricsResponse {
  google.protobuf.Timestamp timestamp = 1;
  string time_range = 2;
  string component = 3;
  map<string, double> system = 4;
  map<string, double> etl_pipeline = 5;
  map<string, double> data_validation = 6;
  map<string, double> data_quality = 7;
  map<string, double> lineage_tracking = 8;
  map<string, double> storage = 9;
  map<string, double> kafka = 10;
  map<string, double> performance = 11;
}